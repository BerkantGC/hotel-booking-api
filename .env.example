# Database Configuration
# ================================================
# PostgreSQL Database
POSTGRES_DB=hoteldb
POSTGRES_USER=berkantgc
POSTGRES_PASSWORD=postgres123
SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/hoteldb
SPRING_DATASOURCE_USERNAME=berkantgc
SPRING_DATASOURCE_PASSWORD=postgres123

# MongoDB Database
MONGO_INITDB_ROOT_USERNAME=root
MONGO_INITDB_ROOT_PASSWORD=123456
SPRING_DATA_MONGODB_URI=mongodb://root:123456@mongodb:27017/hotel_comments_db?authSource=admin

# Redis Configuration
SPRING_DATA_REDIS_HOST=redis
SPRING_DATA_REDIS_PORT=6379
REDIS_HOST=redis
REDIS_PORT=6379

# RabbitMQ Configuration
# ================================================
RABBITMQ_DEFAULT_USER=guest
RABBITMQ_DEFAULT_PASS=guest
SPRING_RABBITMQ_HOST=rabbitmq
SPRING_RABBITMQ_PORT=5672
SPRING_RABBITMQ_USERNAME=guest
SPRING_RABBITMQ_PASSWORD=guest

# Security Configuration
# ================================================
# JWT Secret Key - CHANGE THIS IN PRODUCTION!
JWT_SECRET=4UZslZIUa2bkHgxTGTACDPSKME0MxZDw

# Internal Service Secret Key - CHANGE THIS IN PRODUCTION!
INTERNAL_SECRET_KEY=oO"kdug32^*Pg`9
INTERNAL_SECRET=oO"kdug32^*Pg`9

# Service Ports
# ================================================
# Gateway Service
GATEWAY_SERVICE_PORT=8080

# Auth Service
AUTH_SERVICE_PORT=8087

# Hotel Service
HOTEL_SERVICE_PORT=8084

# Booking Service
BOOKING_SERVICE_PORT=8085

# Comment Service
COMMENT_SERVICE_PORT=8081

# Hotel Admin Service
HOTEL_ADMIN_SERVICE_PORT=8083

# Notification Service
NOTIFICATION_SERVICE_PORT=8082

# AI Agent Service (Node.js)
AI_AGENT_SERVICE_PORT=3001

# Socket Service (Node.js)
SOCKET_SERVICE_PORT=3000

# Service URLs
# ================================================
HOTEL_SERVICE_URL=http://hotel-service:8084
BOOKING_SERVICE_URL=http://booking-service:8085
COMMENT_SERVICE_URL=http://comment-service:8081
USER_SERVICE_URL=http://auth-service:8087
SOCKET_SERVICE_URL=http://socket-service:3000

# AWS Configuration (for hotel-admin-service)
# ================================================
# IMPORTANT: Replace with your own AWS credentials!
AWS_ACCESS_KEY_ID=YOUR_AWS_ACCESS_KEY_ID
AWS_SECRET_ACCESS_KEY=YOUR_AWS_SECRET_ACCESS_KEY
AWS_REGION=eu-central-1
AWS_S3_BUCKET=your-s3-bucket-name

# Node.js Services Configuration
# ================================================
NODE_ENV=production

# Socket Service Database Configuration
DB_HOST=postgresql
DB_PORT=5432
DB_NAME=hoteldb
DB_USER=berkantgc
DB_PASSWORD=postgres123

# Spring Boot Configuration
# ================================================
# JPA/Hibernate
SPRING_JPA_HIBERNATE_DDL_AUTO=update
SPRING_JPA_SHOW_SQL=true
SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect

# SQL Initialization
SPRING_SQL_INIT_MODE=always
SPRING_SQL_INIT_PLATFORM=postgres

# Application Names
SPRING_APPLICATION_NAME_AUTH=auth-service
SPRING_APPLICATION_NAME_HOTEL=hotel-service
SPRING_APPLICATION_NAME_BOOKING=booking-service
SPRING_APPLICATION_NAME_COMMENT=comment-service
SPRING_APPLICATION_NAME_ADMIN=hotel-admin-service
SPRING_APPLICATION_NAME_NOTIFICATION=notification-service
SPRING_APPLICATION_NAME_GATEWAY=gateway-service

# Infrastructure Ports
# ================================================
POSTGRES_PORT=5432
MONGODB_PORT=27017
RABBITMQ_AMQP_PORT=5672
RABBITMQ_MANAGEMENT_PORT=15672

# Development URLs (for local development without Docker)
# ================================================
LOCAL_POSTGRES_URL=jdbc:postgresql://localhost:5432/hoteldb
LOCAL_MONGODB_URI=mongodb://root:123456@localhost:27017/hotel_comments_db?authSource=admin
LOCAL_RABBITMQ_HOST=localhost
LOCAL_REDIS_HOST=localhost

# Docker Network Configuration
# ================================================
POSTGRES_HOST=postgresql
MONGODB_HOST=mongodb
RABBITMQ_HOST=rabbitmq

# Health Check Configuration
# ================================================
MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,gateway

# Additional Configuration
# ================================================
# Spring Security
SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_PUBLIC_KEY_LOCATION=classpath*:public.pem

# Logging Level (optional)
LOGGING_LEVEL_ROOT=INFO
LOGGING_LEVEL_COM_EXAMPLE=DEBUG
